IMD 0 1		// 0번 레지스터에 1 저장 (0 ~ 255)
IMM 1 -1		// 1번 레지스터에 -1 저장 (-128 ~ 127)
STORE 0 255	// 0번 레지스터의 값을 255번 메모리에 저장
LOAD 2 255	// 2번 레지스터에 255번 메모리의 값을 저장
ADD 3 0 1	// [3] = [0] + [1]
SUB 4 0 1		// [4] = [0] - [1]
MUL 5 0 1	// [5] = [0] * [1]
JMP next		// next 라벨로 이동
IMD 0 0		// 건너 뜀
IMD 0 next2 :next	// 0번 레지스터에 next2 라벨 주소값 저장
JDI 0		// 0번 레지스터의 값으로 이동
IMD 0 0		// 건너 뜀
JNE 0 finish :next2	// 0번 레지스터의 값이 0이 아닌 경우 finish 라벨로 이동
JLT 0 finsih	// 0번 레지스터의 값이 0보다 작은 경우
JGT 0 finish	// 0번 레지스터의 값이 0보다 큰 경우
JMP finish :finish